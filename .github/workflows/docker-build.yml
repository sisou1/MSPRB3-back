name: Docker Build and Push  # Nom du workflow

on:
  push:
    branches:
      - master  # Branche sur laquelle le workflow sera déclenché

jobs:
  build:
    runs-on: ubuntu-latest  # Système d'exploitation utilisé pour exécuter les tâches du workflow

    steps:
      - name: Checkout Repository  # Étape pour récupérer le code source
        uses: actions/checkout@v2

      - name: Login to Docker Hub  # Étape pour se connecter à Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Nom d'utilisateur Docker Hub (à remplacer par votre propre nom d'utilisateur Docker Hub)
          password: ${{ secrets.DOCKER_PASSWORD }}  # Mot de passe Docker Hub (à remplacer par votre propre mot de passe Docker Hub)

      - name: Build Docker Image  # Étape pour construire l'image Docker
        run: docker build -t lucasrogard/mspr-back:latest .  # Commande pour construire l'image Docker (à remplacer par votre propre nom d'utilisateur Docker Hub et nom d'image)

      - name: Push Docker Image to Docker Hub  # Étape pour pousser l'image Docker vers Docker Hub
        run: docker push lucasrogard/mspr-back:latest  # Commande pour pousser l'image Docker (à remplacer par votre propre nom d'utilisateur Docker Hub et nom d'image)

      - name: Login to Heroku Container Registry  # Étape pour se connecter au registre de conteneurs Heroku
        run: echo "${{ secrets.HEROKU_API_KEY }}" | docker login --username=_ --password-stdin registry.heroku.com

      - name: Push Docker Image to Heroku  # Étape pour pousser l'image Docker vers Heroku
        run: docker push registry.heroku.com/arosaje-back/web  # Commande pour pousser l'image Docker (à remplacer par le nom de votre application Heroku)
